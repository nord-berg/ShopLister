android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.a:
    void invalidateOptionsMenu(android.app.Activity) -> a
android.support.v4.app.BackStackRecord -> android.support.v4.app.b:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    void bumpBackStackNesting(int) -> a
    int commitAllowingStateLoss() -> a
    int commitInternal(boolean) -> a
    void run() -> run
    void popFromBackStack(boolean) -> b
    java.lang.String getName() -> b
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.c:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.d:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.BackStackState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    java.util.HashMap sClassMap -> N
    int mState -> a
    android.view.View mAnimatingAway -> b
    int mStateAfterAnimating -> c
    android.os.Bundle mSavedFragmentState -> d
    android.util.SparseArray mSavedViewState -> e
    int mIndex -> f
    java.lang.String mWho -> g
    android.os.Bundle mArguments -> h
    android.support.v4.app.Fragment mTarget -> i
    int mTargetIndex -> j
    int mTargetRequestCode -> k
    boolean mAdded -> l
    boolean mRemoving -> m
    boolean mResumed -> n
    boolean mFromLayout -> o
    boolean mInLayout -> p
    boolean mRestored -> q
    int mBackStackNesting -> r
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> s
    android.support.v4.app.FragmentActivity mActivity -> t
    int mFragmentId -> u
    int mContainerId -> v
    java.lang.String mTag -> w
    boolean mHidden -> x
    boolean mDetached -> y
    boolean mRetainInstance -> z
    boolean mRetaining -> A
    boolean mHasMenu -> B
    boolean mMenuVisible -> C
    boolean mCalled -> D
    int mNextAnim -> E
    android.view.ViewGroup mContainer -> F
    android.view.View mView -> G
    android.view.View mInnerView -> H
    boolean mDeferStart -> I
    boolean mUserVisibleHint -> J
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> K
    boolean mLoadersStarted -> L
    boolean mCheckedForLoaderManager -> M
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    void restoreViewState() -> a
    void setIndex(int) -> a
    boolean isInBackStack() -> b
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    android.support.v4.app.FragmentActivity getActivity() -> c
    boolean isAdded() -> d
    boolean isHidden() -> e
    void onHiddenChanged(boolean) -> a
    void setMenuVisibility(boolean) -> b
    void setUserVisibleHint(boolean) -> c
    android.support.v4.app.LoaderManager getLoaderManager() -> f
    void onActivityResult(int,int,android.content.Intent) -> a
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> a
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> a
    void onAttach(android.app.Activity) -> a
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> a
    void onCreate(android.os.Bundle) -> b
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    android.view.View getView() -> g
    void onActivityCreated(android.os.Bundle) -> c
    void onStart() -> h
    void onResume() -> i
    void onSaveInstanceState(android.os.Bundle) -> d
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> j
    void onStop() -> k
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> l
    void onDestroy() -> m
    void initState() -> n
    void onDetach() -> o
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    void onPrepareOptionsMenu(android.view.Menu) -> a
    void onDestroyOptionsMenu() -> p
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void onOptionsMenuClosed(android.view.Menu) -> b
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> b
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void performStart() -> q
    void performStop() -> r
    void performReallyStop() -> s
    void performDestroyView() -> t
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.e:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.f:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.g:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    boolean mCreated -> c
    boolean mResumed -> d
    boolean mStopped -> e
    boolean mReallyStopped -> f
    boolean mRetaining -> g
    boolean mOptionsMenuInvalidated -> h
    boolean mCheckedForLoaderManager -> i
    boolean mLoadersStarted -> j
    android.support.v4.util.SparseArrayCompat mAllLoaderManagers -> k
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> l
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> a
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> b
    void supportInvalidateOptionsMenu() -> c
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void doReallyStop(boolean) -> a
    void onReallyStop() -> d
    void onAttachFragment(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> e
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void invalidateSupportFragmentIndex(int) -> a
    android.support.v4.app.LoaderManagerImpl getLoaderManager(int,boolean,boolean) -> a
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.h:
    android.support.v4.app.FragmentActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.i:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.j:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    java.util.HashMap children -> c
    java.util.ArrayList fragments -> d
    android.support.v4.util.SparseArrayCompat loaders -> e
android.support.v4.app.FragmentManager -> android.support.v4.app.k:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.l:
    void onBackStackChanged() -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.m:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    boolean mNeedMenuInvalidate -> p
    boolean mStateSaved -> q
    boolean mDestroyed -> r
    java.lang.String mNoTransactionsBecause -> s
    boolean mHavePendingDeferredStart -> t
    android.os.Bundle mStateBundle -> u
    android.util.SparseArray mStateArray -> v
    java.lang.Runnable mExecCommit -> w
    android.view.animation.Interpolator DECELERATE_QUINT -> x
    android.view.animation.Interpolator DECELERATE_CUBIC -> y
    android.view.animation.Interpolator ACCELERATE_QUINT -> z
    android.view.animation.Interpolator ACCELERATE_CUBIC -> A
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    boolean popBackStackImmediate() -> c
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> a
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> b
    void moveToState(int,boolean) -> a
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> d
    void makeActive(android.support.v4.app.Fragment) -> c
    void makeInactive(android.support.v4.app.Fragment) -> d
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void checkStateLoss() -> s
    void enqueueAction(java.lang.Runnable,boolean) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> b
    boolean execPendingActions() -> e
    void reportBackStackChanged() -> f
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> a
    java.util.ArrayList retainNonConfig() -> g
    void saveFragmentViewState(android.support.v4.app.Fragment) -> e
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> f
    android.os.Parcelable saveAllState() -> h
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity) -> a
    void noteStateNotSaved() -> i
    void dispatchCreate() -> j
    void dispatchActivityCreated() -> k
    void dispatchStart() -> l
    void dispatchResume() -> m
    void dispatchPause() -> n
    void dispatchStop() -> o
    void dispatchReallyStop() -> p
    void dispatchDestroy() -> q
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> r
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    int reverseTransit(int) -> c
    int transitToStyleIndex(int,boolean) -> b
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.n:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.o:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.p:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentManagerState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentPagerAdapter -> android.support.v4.app.q:
    android.support.v4.app.FragmentManager mFragmentManager -> a
    android.support.v4.app.FragmentTransaction mCurTransaction -> b
    android.support.v4.app.Fragment mCurrentPrimaryItem -> c
    android.support.v4.app.Fragment getItem(int) -> a
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> a
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    long getItemId(int) -> b
    java.lang.String makeFragmentName(int,long) -> a
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.r:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTransaction -> android.support.v4.app.s:
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    int commitAllowingStateLoss() -> a
android.support.v4.app.LoaderManager -> android.support.v4.app.t:
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> a
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> b
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.u:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.v:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    android.support.v4.app.FragmentActivity mActivity -> d
    boolean mStarted -> e
    boolean mRetaining -> f
    boolean mCreatingLoader -> g
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> c
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createAndInstallLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> d
    void installLoader(android.support.v4.app.LoaderManagerImpl$LoaderInfo) -> a
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> a
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> b
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.w:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void start() -> a
    void retain() -> b
    void finishRetain() -> c
    void reportStart() -> d
    void stop() -> e
    void destroy() -> f
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> a
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> b
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.x:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.y:
android.support.v4.content.AsyncTaskLoader -> android.support.v4.a.a:
    android.support.v4.content.AsyncTaskLoader$LoadTask mTask -> a
    android.support.v4.content.AsyncTaskLoader$LoadTask mCancellingTask -> b
    long mUpdateThrottle -> c
    long mLastLoadCompleteTime -> d
    android.os.Handler mHandler -> e
    void onForceLoad() -> a
    boolean cancelLoad() -> b
    void onCanceled(java.lang.Object) -> a
    void executePendingTask() -> c
    void dispatchOnCancelled(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> a
    void dispatchOnLoadComplete(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> b
    java.lang.Object loadInBackground() -> d
    java.lang.Object onLoadInBackground() -> e
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.AsyncTaskLoader$LoadTask -> android.support.v4.a.b:
    java.lang.Object result -> a
    boolean waiting -> b
    java.util.concurrent.CountDownLatch done -> e
    android.support.v4.content.AsyncTaskLoader this$0 -> c
    java.lang.Object doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Object) -> a
    void onCancelled() -> a
    void run() -> run
    java.lang.Object doInBackground(java.lang.Object[]) -> a
android.support.v4.content.CursorLoader -> android.support.v4.a.c:
    android.support.v4.content.Loader$ForceLoadContentObserver mObserver -> f
    android.net.Uri mUri -> g
    java.lang.String[] mProjection -> h
    java.lang.String mSelection -> i
    java.lang.String[] mSelectionArgs -> j
    java.lang.String mSortOrder -> k
    android.database.Cursor mCursor -> l
    android.database.Cursor loadInBackground() -> f
    void registerContentObserver(android.database.Cursor,android.database.ContentObserver) -> a
    void deliverResult(android.database.Cursor) -> a
    void onStartLoading() -> g
    void onStopLoading() -> h
    void onCanceled(android.database.Cursor) -> b
    void onReset() -> i
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    java.lang.Object loadInBackground() -> d
    void onCanceled(java.lang.Object) -> a
    void deliverResult(java.lang.Object) -> b
android.support.v4.content.Loader -> android.support.v4.a.d:
    int mId -> m
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> n
    android.content.Context mContext -> o
    boolean mStarted -> p
    boolean mAbandoned -> q
    boolean mReset -> r
    boolean mContentChanged -> s
    void deliverResult(java.lang.Object) -> b
    android.content.Context getContext() -> j
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    boolean isStarted() -> k
    boolean isAbandoned() -> l
    boolean isReset() -> m
    void startLoading() -> n
    void onStartLoading() -> g
    void forceLoad() -> o
    void onForceLoad() -> a
    void stopLoading() -> p
    void onStopLoading() -> h
    void abandon() -> q
    void onAbandon() -> r
    void reset() -> s
    void onReset() -> i
    boolean takeContentChanged() -> t
    void onContentChanged() -> u
    java.lang.String dataToString(java.lang.Object) -> c
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.Loader$ForceLoadContentObserver -> android.support.v4.a.e:
    android.support.v4.content.Loader this$0 -> a
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.a.f:
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> a
android.support.v4.content.ModernAsyncTask -> android.support.v4.a.g:
    java.util.concurrent.ThreadFactory sThreadFactory -> a
    java.util.concurrent.BlockingQueue sPoolWorkQueue -> b
    java.util.concurrent.Executor THREAD_POOL_EXECUTOR -> d
    android.support.v4.content.ModernAsyncTask$InternalHandler sHandler -> c
    java.util.concurrent.Executor sDefaultExecutor -> e
    android.support.v4.content.ModernAsyncTask$WorkerRunnable mWorker -> f
    java.util.concurrent.FutureTask mFuture -> g
    android.support.v4.content.ModernAsyncTask$Status mStatus -> h
    java.util.concurrent.atomic.AtomicBoolean mTaskInvoked -> i
    void postResultIfNotInvoked(java.lang.Object) -> c
    java.lang.Object postResult(java.lang.Object) -> d
    java.lang.Object doInBackground(java.lang.Object[]) -> a
    void onPreExecute() -> b
    void onPostExecute(java.lang.Object) -> a
    void onProgressUpdate(java.lang.Object[]) -> b
    void onCancelled(java.lang.Object) -> b
    void onCancelled() -> a
    boolean isCancelled() -> c
    boolean cancel(boolean) -> a
    android.support.v4.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> a
    void finish(java.lang.Object) -> e
    java.util.concurrent.atomic.AtomicBoolean access$200(android.support.v4.content.ModernAsyncTask) -> a
    java.lang.Object access$300(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> a
    void access$400(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> b
    void access$500(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> c
android.support.v4.content.ModernAsyncTask$1 -> android.support.v4.a.h:
    java.util.concurrent.atomic.AtomicInteger mCount -> a
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
android.support.v4.content.ModernAsyncTask$2 -> android.support.v4.a.i:
    android.support.v4.content.ModernAsyncTask this$0 -> a
    java.lang.Object call() -> call
android.support.v4.content.ModernAsyncTask$3 -> android.support.v4.a.j:
    android.support.v4.content.ModernAsyncTask this$0 -> a
    void done() -> done
android.support.v4.content.ModernAsyncTask$4 -> android.support.v4.a.k:
    int[] $SwitchMap$android$support$v4$content$ModernAsyncTask$Status -> a
android.support.v4.content.ModernAsyncTask$AsyncTaskResult -> android.support.v4.a.l:
    android.support.v4.content.ModernAsyncTask mTask -> a
    java.lang.Object[] mData -> b
android.support.v4.content.ModernAsyncTask$InternalHandler -> android.support.v4.a.m:
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.ModernAsyncTask$Status -> android.support.v4.a.n:
    android.support.v4.content.ModernAsyncTask$Status PENDING -> a
    android.support.v4.content.ModernAsyncTask$Status RUNNING -> b
    android.support.v4.content.ModernAsyncTask$Status FINISHED -> c
    android.support.v4.content.ModernAsyncTask$Status[] $VALUES -> d
    android.support.v4.content.ModernAsyncTask$Status[] values() -> values
    android.support.v4.content.ModernAsyncTask$Status valueOf(java.lang.String) -> valueOf
android.support.v4.content.ModernAsyncTask$WorkerRunnable -> android.support.v4.a.o:
    java.lang.Object[] mParams -> b
android.support.v4.os.ParcelableCompat -> android.support.v4.b.a:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.b.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.b.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.b.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.b.e:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.util.DebugUtils -> android.support.v4.c.a:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.c.b:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.SparseArrayCompat -> android.support.v4.c.c:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    java.lang.Object get(int) -> a
    java.lang.Object get(int,java.lang.Object) -> a
    void delete(int) -> b
    void remove(int) -> c
    void removeAt(int) -> d
    void gc() -> c
    void put(int,java.lang.Object) -> b
    int size() -> a
    int keyAt(int) -> e
    java.lang.Object valueAt(int) -> f
    void clear() -> b
    int binarySearch(int[],int,int,int) -> a
    int idealByteArraySize(int) -> g
    int idealIntArraySize(int) -> h
android.support.v4.util.TimeUtils -> android.support.v4.c.d:
    java.lang.Object sFormatSync -> a
    char[] sFormatStr -> b
    int accumField(int,int,boolean,int) -> a
    int printField(char[],int,char,int,boolean,int) -> a
    int formatDurationLocked(long,int) -> a
    void formatDuration(long,java.io.PrintWriter,int) -> a
    void formatDuration(long,java.io.PrintWriter) -> a
    void formatDuration(long,long,java.io.PrintWriter) -> a
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.a:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> b
    java.lang.Object DEFAULT_DELEGATE -> c
    java.lang.Object mBridge -> a
    java.lang.Object getBridge() -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.b:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> android.support.v4.view.c:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.d:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.view.e:
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> android.support.v4.view.f:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.view.g:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.h:
    java.lang.Object newAccessibilityDelegateDefaultImpl() -> a
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> android.support.v4.view.i:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.j:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> android.support.v4.view.k:
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> a
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> android.support.v4.view.l:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> android.support.v4.view.m:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.KeyEventCompat -> android.support.v4.view.n:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers(android.view.KeyEvent,int) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.o:
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.p:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.q:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.r:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> a
android.support.v4.view.MotionEventCompat -> android.support.v4.view.s:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionIndex(android.view.MotionEvent) -> a
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.t:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.u:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.v:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.w:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.PagerAdapter -> android.support.v4.view.x:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> b
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    void startUpdate(android.view.View) -> a
    java.lang.Object instantiateItem(android.view.View,int) -> a
    void destroyItem(android.view.View,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> b
    void finishUpdate(android.view.View) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> a
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    int getItemPosition(java.lang.Object) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
    java.lang.CharSequence getPageTitle(int) -> c
    float getPageWidth(int) -> d
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.y:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.z:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.aa:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.ab:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.ac:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.ViewCompat -> android.support.v4.view.ad:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.ae:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    long getFrameTime() -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.af:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.ag:
    long getFrameTime() -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.ah:
    boolean canScrollHorizontally(android.view.View,int) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.ai:
    void postInvalidateOnAnimation(android.view.View) -> b
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.aj:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.ak:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompatHC -> android.support.v4.view.al:
    long getFrameTime() -> a
android.support.v4.view.ViewCompatICS -> android.support.v4.view.am:
    boolean canScrollHorizontally(android.view.View,int) -> a
    void setAccessibilityDelegate(android.view.View,java.lang.Object) -> a
android.support.v4.view.ViewCompatJB -> android.support.v4.view.an:
    void postInvalidateOnAnimation(android.view.View) -> a
    int getImportantForAccessibility(android.view.View) -> b
    void setImportantForAccessibility(android.view.View,int) -> a
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.ao:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> a
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.ap:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.aq:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.ar:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompatFroyo -> android.support.v4.view.as:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    java.util.Comparator COMPARATOR -> b
    android.view.animation.Interpolator sInterpolator -> c
    java.util.ArrayList mItems -> d
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> e
    android.graphics.Rect mTempRect -> f
    android.support.v4.view.PagerAdapter mAdapter -> g
    int mCurItem -> h
    int mRestoredCurItem -> i
    android.os.Parcelable mRestoredAdapterState -> j
    java.lang.ClassLoader mRestoredClassLoader -> k
    android.widget.Scroller mScroller -> l
    android.support.v4.view.ViewPager$PagerObserver mObserver -> m
    int mPageMargin -> n
    android.graphics.drawable.Drawable mMarginDrawable -> o
    int mTopPageBounds -> p
    int mBottomPageBounds -> q
    float mFirstOffset -> r
    float mLastOffset -> s
    int mChildWidthMeasureSpec -> t
    int mChildHeightMeasureSpec -> u
    boolean mInLayout -> v
    boolean mScrollingCacheEnabled -> w
    boolean mPopulatePending -> x
    int mOffscreenPageLimit -> y
    boolean mIsBeingDragged -> z
    boolean mIsUnableToDrag -> A
    int mDefaultGutterSize -> B
    int mGutterSize -> C
    int mTouchSlop -> D
    float mInitialMotionX -> E
    float mLastMotionX -> F
    float mLastMotionY -> G
    int mActivePointerId -> H
    android.view.VelocityTracker mVelocityTracker -> I
    int mMinimumVelocity -> J
    int mMaximumVelocity -> K
    int mFlingDistance -> L
    int mCloseEnough -> M
    boolean mFakeDragging -> N
    long mFakeDragBeginTime -> O
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> P
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> Q
    boolean mFirstLayout -> R
    boolean mNeedCalculatePageOffsets -> S
    boolean mCalledSuper -> T
    int mDecorChildCount -> U
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> V
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> W
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> Z
    int mScrollState -> aa
    void initViewPager() -> a
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> j
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> a
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> a
    void smoothScrollTo(int,int,int) -> a
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void dataSetChanged() -> b
    void populate() -> c
    void populate(int) -> a
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> d
    void onPageScrolled(int,float,int) -> a
    void completeScroll() -> k
    boolean isGutterDrag(float,float) -> a
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean performDrag(float) -> c
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> l
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean beginFakeDrag() -> d
    void endFakeDrag() -> e
    void fakeDragBy(float) -> b
    boolean isFakeDragging() -> f
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> m
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean arrowScroll(int) -> c
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> g
    boolean pageRight() -> h
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.support.v4.view.PagerAdapter access$100(android.support.v4.view.ViewPager) -> a
    int access$200(android.support.v4.view.ViewPager) -> b
    int[] access$300() -> i
android.support.v4.view.ViewPager$1 -> android.support.v4.view.at:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.au:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.av:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.aw:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ax:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> android.support.v4.view.ay:
    android.support.v4.view.ViewPager this$0 -> b
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.az:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.ba:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.bb:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.bc:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> b
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> b
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.a.a:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> a
    java.lang.Object mInfo -> b
    java.lang.Object getInfo() -> a
    void addAction(int) -> a
    void setScrollable(boolean) -> a
    void setClassName(java.lang.CharSequence) -> a
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> android.support.v4.view.a.b:
    void addAction(java.lang.Object,int) -> a
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setScrollable(java.lang.Object,boolean) -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> android.support.v4.view.a.c:
    void addAction(java.lang.Object,int) -> a
    void setScrollable(java.lang.Object,boolean) -> a
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> android.support.v4.view.a.d:
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> android.support.v4.view.a.e:
    void addAction(java.lang.Object,int) -> a
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setScrollable(java.lang.Object,boolean) -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs -> android.support.v4.view.a.f:
    void addAction(java.lang.Object,int) -> a
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setScrollable(java.lang.Object,boolean) -> a
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.d.a:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.d.b:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.d.c:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.d.d:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.d.e:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
com.mobeta.android.dslv.DragSortController -> com.mobeta.android.dslv.a:
    int mDragInitMode -> a
    boolean mSortEnabled -> b
    int mRemoveMode -> c
    boolean mRemoveEnabled -> d
    boolean mIsRemoving -> e
    android.view.GestureDetector mDetector -> f
    android.view.GestureDetector mFlingRemoveDetector -> g
    int mTouchSlop -> h
    int mHitPos -> i
    int mFlingHitPos -> j
    int mClickRemoveHitPos -> k
    int[] mTempLoc -> l
    int mItemX -> m
    int mItemY -> n
    int mCurrX -> o
    int mCurrY -> p
    boolean mDragging -> q
    float mFlingSpeed -> r
    int mDragHandleId -> s
    int mClickRemoveId -> t
    int mFlingHandleId -> u
    boolean mCanDrag -> v
    com.mobeta.android.dslv.DragSortListView mDslv -> w
    int mPositionX -> x
    android.view.GestureDetector$OnGestureListener mFlingRemoveListener -> y
    void setDragInitMode(int) -> a
    void setSortEnabled(boolean) -> a
    void setRemoveMode(int) -> b
    void setRemoveEnabled(boolean) -> b
    void setDragHandleId(int) -> c
    boolean startDrag(int,int,int) -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void onDragFloatView(android.view.View,android.graphics.Point,android.graphics.Point) -> a
    int startDragPosition(android.view.MotionEvent) -> a
    int startFlingPosition(android.view.MotionEvent) -> b
    int dragHandleHitPosition(android.view.MotionEvent) -> c
    int flingHandleHitPosition(android.view.MotionEvent) -> d
    int viewIdHitPosition(android.view.MotionEvent,int) -> a
    boolean onDown(android.view.MotionEvent) -> onDown
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    void onShowPress(android.view.MotionEvent) -> onShowPress
    boolean access$0(com.mobeta.android.dslv.DragSortController) -> a
    boolean access$1(com.mobeta.android.dslv.DragSortController) -> b
    com.mobeta.android.dslv.DragSortListView access$2(com.mobeta.android.dslv.DragSortController) -> c
    float access$3(com.mobeta.android.dslv.DragSortController) -> d
    int access$4(com.mobeta.android.dslv.DragSortController) -> e
    void access$5(com.mobeta.android.dslv.DragSortController,boolean) -> a
com.mobeta.android.dslv.DragSortController$1 -> com.mobeta.android.dslv.b:
    com.mobeta.android.dslv.DragSortController this$0 -> a
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
com.mobeta.android.dslv.DragSortItemView -> com.mobeta.android.dslv.c:
    int mGravity -> a
    void setGravity(int) -> setGravity
    int getGravity() -> getGravity
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
com.mobeta.android.dslv.DragSortItemViewCheckable -> com.mobeta.android.dslv.d:
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    void toggle() -> toggle
com.mobeta.android.dslv.DragSortListView -> com.mobeta.android.dslv.DragSortListView:
    android.view.View mFloatView -> a
    android.graphics.Point mFloatLoc -> b
    android.graphics.Point mTouchLoc -> c
    int mFloatViewMid -> d
    boolean mFloatViewOnMeasured -> e
    android.database.DataSetObserver mObserver -> f
    float mFloatAlpha -> g
    float mCurrFloatAlpha -> h
    int mFloatPos -> i
    int mFirstExpPos -> j
    int mSecondExpPos -> k
    boolean mAnimate -> l
    int mSrcPos -> m
    int mDragDeltaX -> n
    int mDragDeltaY -> o
    int mOffsetX -> p
    int mOffsetY -> q
    com.mobeta.android.dslv.DragSortListView$DragListener mDragListener -> r
    com.mobeta.android.dslv.DragSortListView$DropListener mDropListener -> s
    com.mobeta.android.dslv.DragSortListView$RemoveListener mRemoveListener -> t
    boolean mDragEnabled -> u
    int mDragState -> v
    int mItemHeightCollapsed -> w
    int mFloatViewHeight -> x
    int mFloatViewHeightHalf -> y
    int mWidthMeasureSpec -> z
    android.view.View[] mSampleViewTypes -> A
    com.mobeta.android.dslv.DragSortListView$DragScroller mDragScroller -> B
    float mDragUpScrollStartFrac -> C
    float mDragDownScrollStartFrac -> D
    int mUpScrollStartY -> E
    int mDownScrollStartY -> F
    float mDownScrollStartYF -> G
    float mUpScrollStartYF -> H
    float mDragUpScrollHeight -> I
    float mDragDownScrollHeight -> J
    float mMaxScrollSpeed -> K
    com.mobeta.android.dslv.DragSortListView$DragScrollProfile mScrollProfile -> L
    int mX -> M
    int mY -> N
    int mLastX -> O
    int mLastY -> P
    int mDragStartY -> Q
    int mDragFlags -> R
    boolean mLastCallWasIntercept -> S
    boolean mInTouchEvent -> T
    com.mobeta.android.dslv.DragSortListView$FloatViewManager mFloatViewManager -> U
    android.view.MotionEvent mCancelEvent -> V
    int mCancelMethod -> W
    float mSlideRegionFrac -> Z
    float mSlideFrac -> aa
    com.mobeta.android.dslv.DragSortListView$AdapterWrapper mAdapterWrapper -> ab
    boolean mTrackDragSort -> ac
    com.mobeta.android.dslv.DragSortListView$DragSortTracker mDragSortTracker -> ad
    boolean mBlockLayoutRequests -> ae
    boolean mIgnoreTouchEvent -> af
    com.mobeta.android.dslv.DragSortListView$HeightCache mChildHeightCache -> ag
    com.mobeta.android.dslv.DragSortListView$RemoveAnimator mRemoveAnimator -> ah
    com.mobeta.android.dslv.DragSortListView$LiftAnimator mLiftAnimator -> ai
    com.mobeta.android.dslv.DragSortListView$DropAnimator mDropAnimator -> aj
    boolean mUseRemoveVelocity -> ak
    float mRemoveVelocityX -> al
    boolean mListViewIntercepted -> am
    boolean mFloatViewInvalidated -> an
    void setFloatAlpha(float) -> setFloatAlpha
    float getFloatAlpha() -> getFloatAlpha
    void setMaxScrollSpeed(float) -> setMaxScrollSpeed
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    android.widget.ListAdapter getInputAdapter() -> getInputAdapter
    void drawDivider(int,android.graphics.Canvas) -> a
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    int getItemHeight(int) -> b
    int getShuffleEdge(int,int) -> a
    boolean updatePositions() -> d
    void onDraw(android.graphics.Canvas) -> onDraw
    void removeItem(int) -> a
    void removeItem(int,float) -> a
    void cancelDrag() -> a
    void clearPositions() -> e
    void dropFloatView() -> f
    void doRemoveItem() -> g
    void doRemoveItem(int) -> c
    void adjustOnReorder() -> h
    boolean stopDrag(boolean) -> a
    boolean stopDragWithVelocity(boolean,float) -> a
    boolean stopDrag(boolean,float) -> b
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void doActionUpOrCancel() -> i
    void saveTouchCoords(android.view.MotionEvent) -> b
    boolean listViewIntercepted() -> b
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void setDragScrollStart(float) -> setDragScrollStart
    void setDragScrollStarts(float,float) -> a
    void continueDrag(int,int) -> b
    void updateScrollStarts() -> j
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void adjustAllItems() -> k
    void adjustItem(int,android.view.View,boolean) -> a
    int getChildHeight(int) -> d
    int getChildHeight(int,android.view.View,boolean) -> b
    int calcItemHeight(int,android.view.View,boolean) -> c
    int calcItemHeight(int,int) -> c
    void requestLayout() -> requestLayout
    int adjustScroll(int,android.view.View,int,int) -> a
    void measureItem(android.view.View) -> a
    void measureFloatView() -> l
    void onMeasure(int,int) -> onMeasure
    void layoutChildren() -> layoutChildren
    boolean onDragTouchEvent(android.view.MotionEvent) -> a
    boolean startDrag(int,int,int,int) -> a
    boolean startDrag(int,android.view.View,int,int,int) -> a
    void doDragFloatView(boolean) -> b
    void doDragFloatView(int,android.view.View,boolean) -> d
    void updateFloatView() -> m
    void destroyFloatView() -> n
    void setFloatViewManager(com.mobeta.android.dslv.DragSortListView$FloatViewManager) -> setFloatViewManager
    void setDragListener(com.mobeta.android.dslv.DragSortListView$DragListener) -> setDragListener
    void setDragEnabled(boolean) -> setDragEnabled
    boolean isDragEnabled() -> c
    void setDropListener(com.mobeta.android.dslv.DragSortListView$DropListener) -> setDropListener
    void setRemoveListener(com.mobeta.android.dslv.DragSortListView$RemoveListener) -> setRemoveListener
    void setDragSortListener(com.mobeta.android.dslv.DragSortListView$DragSortListener) -> setDragSortListener
    void setDragScrollProfile(com.mobeta.android.dslv.DragSortListView$DragScrollProfile) -> setDragScrollProfile
    float access$0(com.mobeta.android.dslv.DragSortListView) -> a
    void access$1(com.mobeta.android.dslv.DragSortListView,int,android.view.View,boolean) -> a
    int access$2(com.mobeta.android.dslv.DragSortListView) -> b
    int access$3(com.mobeta.android.dslv.DragSortListView) -> c
    int access$4(com.mobeta.android.dslv.DragSortListView) -> d
    void access$5(com.mobeta.android.dslv.DragSortListView,int) -> a
    android.graphics.Point access$6(com.mobeta.android.dslv.DragSortListView) -> e
    int access$7(com.mobeta.android.dslv.DragSortListView) -> f
    void access$8(com.mobeta.android.dslv.DragSortListView,boolean) -> a
    int access$9(com.mobeta.android.dslv.DragSortListView) -> g
    int access$10(com.mobeta.android.dslv.DragSortListView) -> h
    void access$11(com.mobeta.android.dslv.DragSortListView,int) -> b
    int access$12(com.mobeta.android.dslv.DragSortListView) -> i
    int access$13(com.mobeta.android.dslv.DragSortListView) -> j
    void access$14(com.mobeta.android.dslv.DragSortListView) -> k
    int access$15(com.mobeta.android.dslv.DragSortListView) -> l
    int access$16(com.mobeta.android.dslv.DragSortListView) -> m
    boolean access$17(com.mobeta.android.dslv.DragSortListView) -> n
    float access$18(com.mobeta.android.dslv.DragSortListView) -> o
    void access$19(com.mobeta.android.dslv.DragSortListView,float) -> a
    void access$20(com.mobeta.android.dslv.DragSortListView) -> p
    int access$21(com.mobeta.android.dslv.DragSortListView,int,android.view.View,boolean) -> b
    void access$22(com.mobeta.android.dslv.DragSortListView) -> q
    int access$23(com.mobeta.android.dslv.DragSortListView) -> r
    com.mobeta.android.dslv.DragSortListView$DragScrollProfile access$24(com.mobeta.android.dslv.DragSortListView) -> s
    float access$25(com.mobeta.android.dslv.DragSortListView) -> t
    float access$26(com.mobeta.android.dslv.DragSortListView) -> u
    float access$27(com.mobeta.android.dslv.DragSortListView) -> v
    float access$28(com.mobeta.android.dslv.DragSortListView) -> w
    void access$29(com.mobeta.android.dslv.DragSortListView,boolean) -> b
    void access$30(com.mobeta.android.dslv.DragSortListView,int,android.view.View,boolean) -> c
    int access$31(com.mobeta.android.dslv.DragSortListView,int) -> c
    int access$32(com.mobeta.android.dslv.DragSortListView,int) -> d
    int access$33(com.mobeta.android.dslv.DragSortListView) -> x
    int access$34(com.mobeta.android.dslv.DragSortListView,int,int) -> a
com.mobeta.android.dslv.DragSortListView$1 -> com.mobeta.android.dslv.e:
    com.mobeta.android.dslv.DragSortListView this$0 -> a
    float getSpeed(float,long) -> a
com.mobeta.android.dslv.DragSortListView$2 -> com.mobeta.android.dslv.f:
    com.mobeta.android.dslv.DragSortListView this$0 -> a
    void cancel() -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
com.mobeta.android.dslv.DragSortListView$AdapterWrapper -> com.mobeta.android.dslv.g:
    android.widget.ListAdapter mAdapter -> b
    com.mobeta.android.dslv.DragSortListView this$0 -> a
    android.widget.ListAdapter getAdapter() -> a
    long getItemId(int) -> getItemId
    java.lang.Object getItem(int) -> getItem
    int getCount() -> getCount
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    boolean isEnabled(int) -> isEnabled
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    boolean hasStableIds() -> hasStableIds
    boolean isEmpty() -> isEmpty
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.mobeta.android.dslv.DragSortListView$AdapterWrapper$1 -> com.mobeta.android.dslv.h:
    com.mobeta.android.dslv.DragSortListView$AdapterWrapper this$1 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
com.mobeta.android.dslv.DragSortListView$DragListener -> com.mobeta.android.dslv.i:
    void drag(int,int) -> a
com.mobeta.android.dslv.DragSortListView$DragScrollProfile -> com.mobeta.android.dslv.j:
    float getSpeed(float,long) -> a
com.mobeta.android.dslv.DragSortListView$DragScroller -> com.mobeta.android.dslv.k:
    boolean mAbort -> b
    long mPrevTime -> c
    long mCurrTime -> d
    int dy -> e
    float dt -> f
    long tStart -> g
    int scrollDir -> h
    float mScrollSpeed -> i
    boolean mScrolling -> j
    com.mobeta.android.dslv.DragSortListView this$0 -> a
    boolean isScrolling() -> a
    int getScrollDir() -> b
    void startScrolling(int) -> a
    void stopScrolling(boolean) -> a
    void run() -> run
com.mobeta.android.dslv.DragSortListView$DragSortListener -> com.mobeta.android.dslv.l:
com.mobeta.android.dslv.DragSortListView$DragSortTracker -> com.mobeta.android.dslv.m:
    java.lang.StringBuilder mBuilder -> a
    java.io.File mFile -> b
    int mNumInBuffer -> d
    int mNumFlushes -> e
    boolean mTracking -> f
    com.mobeta.android.dslv.DragSortListView this$0 -> c
    void startTracking() -> a
    void appendState() -> b
    void flush() -> c
    void stopTracking() -> d
com.mobeta.android.dslv.DragSortListView$DropAnimator -> com.mobeta.android.dslv.n:
    int mDropPos -> d
    int srcPos -> e
    float mInitDeltaY -> f
    float mInitDeltaX -> g
    com.mobeta.android.dslv.DragSortListView this$0 -> a
    void onStart() -> a
    int getTargetY() -> e
    void onUpdate(float,float) -> a
    void onStop() -> b
com.mobeta.android.dslv.DragSortListView$DropListener -> com.mobeta.android.dslv.o:
    void drop(int,int) -> a_
com.mobeta.android.dslv.DragSortListView$FloatViewManager -> com.mobeta.android.dslv.p:
    android.view.View onCreateFloatView(int) -> d
    void onDragFloatView(android.view.View,android.graphics.Point,android.graphics.Point) -> a
    void onDestroyFloatView(android.view.View) -> a
com.mobeta.android.dslv.DragSortListView$HeightCache -> com.mobeta.android.dslv.q:
    android.util.SparseIntArray mMap -> b
    java.util.ArrayList mOrder -> c
    int mMaxSize -> d
    com.mobeta.android.dslv.DragSortListView this$0 -> a
    void add(int,int) -> a
    int get(int) -> a
    void clear() -> a
com.mobeta.android.dslv.DragSortListView$LiftAnimator -> com.mobeta.android.dslv.r:
    float mInitDragDeltaY -> d
    float mFinalDragDeltaY -> e
    com.mobeta.android.dslv.DragSortListView this$0 -> a
    void onStart() -> a
    void onUpdate(float,float) -> a
com.mobeta.android.dslv.DragSortListView$RemoveAnimator -> com.mobeta.android.dslv.s:
    float mFloatLocX -> d
    float mFirstStartBlank -> e
    float mSecondStartBlank -> f
    int mFirstChildHeight -> g
    int mSecondChildHeight -> h
    int mFirstPos -> i
    int mSecondPos -> j
    int srcPos -> k
    com.mobeta.android.dslv.DragSortListView this$0 -> a
    void onStart() -> a
    void onUpdate(float,float) -> a
    void onStop() -> b
com.mobeta.android.dslv.DragSortListView$RemoveListener -> com.mobeta.android.dslv.t:
    void remove(int) -> a
com.mobeta.android.dslv.DragSortListView$SmoothAnimator -> com.mobeta.android.dslv.u:
    long mStartTime -> b
    float mDurationF -> a
    float mAlpha -> d
    float mA -> e
    float mB -> f
    float mC -> g
    float mD -> h
    boolean mCanceled -> i
    com.mobeta.android.dslv.DragSortListView this$0 -> c
    float transform(float) -> a
    void start() -> c
    void cancel() -> d
    void onStart() -> a
    void onUpdate(float,float) -> a
    void onStop() -> b
    void run() -> run
com.mobeta.android.dslv.R -> com.mobeta.android.dslv.v:
com.mobeta.android.dslv.R$styleable -> com.mobeta.android.dslv.w:
    int[] DragSortListView -> DragSortListView
    int DragSortListView_click_remove_id -> DragSortListView_click_remove_id
    int DragSortListView_collapsed_height -> DragSortListView_collapsed_height
    int DragSortListView_drag_enabled -> DragSortListView_drag_enabled
    int DragSortListView_drag_handle_id -> DragSortListView_drag_handle_id
    int DragSortListView_drag_scroll_start -> DragSortListView_drag_scroll_start
    int DragSortListView_drag_start_mode -> DragSortListView_drag_start_mode
    int DragSortListView_drop_animation_duration -> DragSortListView_drop_animation_duration
    int DragSortListView_fling_handle_id -> DragSortListView_fling_handle_id
    int DragSortListView_float_alpha -> DragSortListView_float_alpha
    int DragSortListView_float_background_color -> DragSortListView_float_background_color
    int DragSortListView_max_drag_scroll_speed -> DragSortListView_max_drag_scroll_speed
    int DragSortListView_remove_animation_duration -> DragSortListView_remove_animation_duration
    int DragSortListView_remove_enabled -> DragSortListView_remove_enabled
    int DragSortListView_remove_mode -> DragSortListView_remove_mode
    int DragSortListView_slide_shuffle_speed -> DragSortListView_slide_shuffle_speed
    int DragSortListView_sort_enabled -> DragSortListView_sort_enabled
    int DragSortListView_track_drag_sort -> DragSortListView_track_drag_sort
    int DragSortListView_use_default_controller -> DragSortListView_use_default_controller
com.mobeta.android.dslv.SimpleFloatViewManager -> com.mobeta.android.dslv.x:
    android.graphics.Bitmap mFloatBitmap -> a
    android.widget.ImageView mImageView -> b
    int mFloatBGColor -> c
    android.widget.ListView mListView -> d
    void setBackgroundColor(int) -> e
    android.view.View onCreateFloatView(int) -> d
    void onDragFloatView(android.view.View,android.graphics.Point,android.graphics.Point) -> a
    void onDestroyFloatView(android.view.View) -> a
com.viewpagerindicator.CirclePageIndicator -> com.viewpagerindicator.CirclePageIndicator:
    float mRadius -> a
    android.graphics.Paint mPaintPageFill -> b
    android.graphics.Paint mPaintStroke -> c
    android.graphics.Paint mPaintFill -> d
    android.support.v4.view.ViewPager mViewPager -> e
    android.support.v4.view.ViewPager$OnPageChangeListener mListener -> f
    int mCurrentPage -> g
    int mSnapPage -> h
    float mPageOffset -> i
    int mScrollState -> j
    int mOrientation -> k
    boolean mCentered -> l
    boolean mSnap -> m
    int mTouchSlop -> n
    float mLastMotionX -> o
    int mActivePointerId -> p
    boolean mIsDragging -> q
    void setCentered(boolean) -> setCentered
    void setPageColor(int) -> setPageColor
    int getPageColor() -> getPageColor
    void setFillColor(int) -> setFillColor
    int getFillColor() -> getFillColor
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    void setStrokeColor(int) -> setStrokeColor
    int getStrokeColor() -> getStrokeColor
    void setStrokeWidth(float) -> setStrokeWidth
    float getStrokeWidth() -> getStrokeWidth
    void setRadius(float) -> setRadius
    float getRadius() -> getRadius
    void setSnap(boolean) -> setSnap
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setViewPager(android.support.v4.view.ViewPager) -> setViewPager
    void setCurrentItem(int) -> setCurrentItem
    void onPageScrollStateChanged(int) -> b
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void onMeasure(int,int) -> onMeasure
    int measureLong(int) -> c
    int measureShort(int) -> d
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
com.viewpagerindicator.CirclePageIndicator$SavedState -> com.viewpagerindicator.CirclePageIndicator$SavedState:
    int currentPage -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.viewpagerindicator.CirclePageIndicator$SavedState$1 -> com.viewpagerindicator.a:
    com.viewpagerindicator.CirclePageIndicator$SavedState createFromParcel(android.os.Parcel) -> a
    com.viewpagerindicator.CirclePageIndicator$SavedState[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.viewpagerindicator.IconPagerAdapter -> com.viewpagerindicator.b:
    int getIconResId(int) -> a
com.viewpagerindicator.IcsLinearLayout -> com.viewpagerindicator.c:
    int[] LL -> a
    android.graphics.drawable.Drawable mDivider -> b
    int mDividerWidth -> c
    int mDividerHeight -> d
    int mShowDividers -> e
    int mDividerPadding -> f
    void setDividerDrawable(android.graphics.drawable.Drawable) -> setDividerDrawable
    void measureChildWithMargins(android.view.View,int,int,int,int) -> measureChildWithMargins
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawDividersVertical(android.graphics.Canvas) -> a
    void drawDividersHorizontal(android.graphics.Canvas) -> b
    void drawHorizontalDivider(android.graphics.Canvas,int) -> a
    void drawVerticalDivider(android.graphics.Canvas,int) -> b
    boolean hasDividerBeforeChildAt(int) -> a
com.viewpagerindicator.LinePageIndicator -> com.viewpagerindicator.LinePageIndicator:
    android.graphics.Paint mPaintUnselected -> a
    android.graphics.Paint mPaintSelected -> b
    android.support.v4.view.ViewPager mViewPager -> c
    android.support.v4.view.ViewPager$OnPageChangeListener mListener -> d
    int mCurrentPage -> e
    boolean mCentered -> f
    float mLineWidth -> g
    float mGapWidth -> h
    int mTouchSlop -> i
    float mLastMotionX -> j
    int mActivePointerId -> k
    boolean mIsDragging -> l
    void setCentered(boolean) -> setCentered
    void setUnselectedColor(int) -> setUnselectedColor
    int getUnselectedColor() -> getUnselectedColor
    void setSelectedColor(int) -> setSelectedColor
    int getSelectedColor() -> getSelectedColor
    void setLineWidth(float) -> setLineWidth
    float getLineWidth() -> getLineWidth
    void setStrokeWidth(float) -> setStrokeWidth
    float getStrokeWidth() -> getStrokeWidth
    void setGapWidth(float) -> setGapWidth
    float getGapWidth() -> getGapWidth
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setViewPager(android.support.v4.view.ViewPager) -> setViewPager
    void setCurrentItem(int) -> setCurrentItem
    void onPageScrollStateChanged(int) -> b
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void onMeasure(int,int) -> onMeasure
    int measureWidth(int) -> c
    int measureHeight(int) -> d
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
com.viewpagerindicator.LinePageIndicator$SavedState -> com.viewpagerindicator.LinePageIndicator$SavedState:
    int currentPage -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.viewpagerindicator.LinePageIndicator$SavedState$1 -> com.viewpagerindicator.d:
    com.viewpagerindicator.LinePageIndicator$SavedState createFromParcel(android.os.Parcel) -> a
    com.viewpagerindicator.LinePageIndicator$SavedState[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.viewpagerindicator.PageIndicator -> com.viewpagerindicator.e:
com.viewpagerindicator.R -> com.viewpagerindicator.f:
com.viewpagerindicator.R$attr -> com.viewpagerindicator.g:
    int centered -> centered
    int clipPadding -> clipPadding
    int fadeDelay -> fadeDelay
    int fadeLength -> fadeLength
    int fades -> fades
    int fillColor -> fillColor
    int footerColor -> footerColor
    int footerIndicatorHeight -> footerIndicatorHeight
    int footerIndicatorStyle -> footerIndicatorStyle
    int footerIndicatorUnderlinePadding -> footerIndicatorUnderlinePadding
    int footerLineHeight -> footerLineHeight
    int footerPadding -> footerPadding
    int gapWidth -> gapWidth
    int linePosition -> linePosition
    int lineWidth -> lineWidth
    int pageColor -> pageColor
    int radius -> radius
    int selectedBold -> selectedBold
    int selectedColor -> selectedColor
    int snap -> snap
    int strokeColor -> strokeColor
    int strokeWidth -> strokeWidth
    int titlePadding -> titlePadding
    int topPadding -> topPadding
    int unselectedColor -> unselectedColor
    int vpiCirclePageIndicatorStyle -> vpiCirclePageIndicatorStyle
    int vpiIconPageIndicatorStyle -> vpiIconPageIndicatorStyle
    int vpiLinePageIndicatorStyle -> vpiLinePageIndicatorStyle
    int vpiTabPageIndicatorStyle -> vpiTabPageIndicatorStyle
    int vpiTitlePageIndicatorStyle -> vpiTitlePageIndicatorStyle
    int vpiUnderlinePageIndicatorStyle -> vpiUnderlinePageIndicatorStyle
com.viewpagerindicator.TabPageIndicator -> com.viewpagerindicator.TabPageIndicator:
    java.lang.CharSequence EMPTY_TITLE -> a
    java.lang.Runnable mTabSelector -> b
    android.view.View$OnClickListener mTabClickListener -> c
    com.viewpagerindicator.IcsLinearLayout mTabLayout -> d
    android.support.v4.view.ViewPager mViewPager -> e
    android.support.v4.view.ViewPager$OnPageChangeListener mListener -> f
    int mMaxTabWidth -> g
    int mSelectedTabIndex -> h
    com.viewpagerindicator.TabPageIndicator$OnTabReselectedListener mTabReselectedListener -> i
    void setOnTabReselectedListener(com.viewpagerindicator.TabPageIndicator$OnTabReselectedListener) -> setOnTabReselectedListener
    void onMeasure(int,int) -> onMeasure
    void animateToTab(int) -> c
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void addTab(int,java.lang.CharSequence,int) -> a
    void onPageScrollStateChanged(int) -> b
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void setViewPager(android.support.v4.view.ViewPager) -> setViewPager
    void notifyDataSetChanged() -> a
    void setCurrentItem(int) -> setCurrentItem
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    android.support.v4.view.ViewPager access$0(com.viewpagerindicator.TabPageIndicator) -> a
    com.viewpagerindicator.TabPageIndicator$OnTabReselectedListener access$1(com.viewpagerindicator.TabPageIndicator) -> b
    int access$2(com.viewpagerindicator.TabPageIndicator) -> c
    void access$3(com.viewpagerindicator.TabPageIndicator,java.lang.Runnable) -> a
com.viewpagerindicator.TabPageIndicator$1 -> com.viewpagerindicator.h:
    com.viewpagerindicator.TabPageIndicator this$0 -> a
    void onClick(android.view.View) -> onClick
com.viewpagerindicator.TabPageIndicator$2 -> com.viewpagerindicator.i:
    com.viewpagerindicator.TabPageIndicator this$0 -> a
    android.view.View val$tabView -> b
    void run() -> run
com.viewpagerindicator.TabPageIndicator$OnTabReselectedListener -> com.viewpagerindicator.j:
    void onTabReselected(int) -> a
com.viewpagerindicator.TabPageIndicator$TabView -> com.viewpagerindicator.k:
    int mIndex -> b
    com.viewpagerindicator.TabPageIndicator this$0 -> a
    void onMeasure(int,int) -> onMeasure
    int getIndex() -> a
    void access$0(com.viewpagerindicator.TabPageIndicator$TabView,int) -> a
com.viewpagerindicator.TitlePageIndicator -> com.viewpagerindicator.TitlePageIndicator:
    android.support.v4.view.ViewPager mViewPager -> a
    android.support.v4.view.ViewPager$OnPageChangeListener mListener -> b
    int mCurrentPage -> c
    float mPageOffset -> d
    int mScrollState -> e
    android.graphics.Paint mPaintText -> f
    boolean mBoldText -> g
    int mColorText -> h
    int mColorSelected -> i
    android.graphics.Path mPath -> j
    android.graphics.Rect mBounds -> k
    android.graphics.Paint mPaintFooterLine -> l
    com.viewpagerindicator.TitlePageIndicator$IndicatorStyle mFooterIndicatorStyle -> m
    com.viewpagerindicator.TitlePageIndicator$LinePosition mLinePosition -> n
    android.graphics.Paint mPaintFooterIndicator -> o
    float mFooterIndicatorHeight -> p
    float mFooterIndicatorUnderlinePadding -> q
    float mFooterPadding -> r
    float mTitlePadding -> s
    float mTopPadding -> t
    float mClipPadding -> u
    float mFooterLineHeight -> v
    int mTouchSlop -> w
    float mLastMotionX -> x
    int mActivePointerId -> y
    boolean mIsDragging -> z
    com.viewpagerindicator.TitlePageIndicator$OnCenterItemClickListener mCenterItemClickListener -> A
    int[] $SWITCH_TABLE$com$viewpagerindicator$TitlePageIndicator$IndicatorStyle -> B
    int getFooterColor() -> getFooterColor
    void setFooterColor(int) -> setFooterColor
    float getFooterLineHeight() -> getFooterLineHeight
    void setFooterLineHeight(float) -> setFooterLineHeight
    float getFooterIndicatorHeight() -> getFooterIndicatorHeight
    void setFooterIndicatorHeight(float) -> setFooterIndicatorHeight
    float getFooterIndicatorPadding() -> getFooterIndicatorPadding
    void setFooterIndicatorPadding(float) -> setFooterIndicatorPadding
    com.viewpagerindicator.TitlePageIndicator$IndicatorStyle getFooterIndicatorStyle() -> getFooterIndicatorStyle
    void setFooterIndicatorStyle(com.viewpagerindicator.TitlePageIndicator$IndicatorStyle) -> setFooterIndicatorStyle
    com.viewpagerindicator.TitlePageIndicator$LinePosition getLinePosition() -> getLinePosition
    void setLinePosition(com.viewpagerindicator.TitlePageIndicator$LinePosition) -> setLinePosition
    int getSelectedColor() -> getSelectedColor
    void setSelectedColor(int) -> setSelectedColor
    void setSelectedBold(boolean) -> setSelectedBold
    int getTextColor() -> getTextColor
    void setTextColor(int) -> setTextColor
    float getTextSize() -> getTextSize
    void setTextSize(float) -> setTextSize
    float getTitlePadding() -> getTitlePadding
    void setTitlePadding(float) -> setTitlePadding
    float getTopPadding() -> getTopPadding
    void setTopPadding(float) -> setTopPadding
    float getClipPadding() -> getClipPadding
    void setClipPadding(float) -> setClipPadding
    void setTypeface(android.graphics.Typeface) -> setTypeface
    android.graphics.Typeface getTypeface() -> getTypeface
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void clipViewOnTheRight(android.graphics.Rect,float,int) -> a
    void clipViewOnTheLeft(android.graphics.Rect,float,int) -> b
    java.util.ArrayList calculateAllBounds(android.graphics.Paint) -> a
    android.graphics.Rect calcBounds(int,android.graphics.Paint) -> a
    void setViewPager(android.support.v4.view.ViewPager) -> setViewPager
    void setOnCenterItemClickListener(com.viewpagerindicator.TitlePageIndicator$OnCenterItemClickListener) -> setOnCenterItemClickListener
    void setCurrentItem(int) -> setCurrentItem
    void onPageScrollStateChanged(int) -> b
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void onMeasure(int,int) -> onMeasure
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    java.lang.CharSequence getTitle(int) -> c
    int[] $SWITCH_TABLE$com$viewpagerindicator$TitlePageIndicator$IndicatorStyle() -> a
com.viewpagerindicator.TitlePageIndicator$IndicatorStyle -> com.viewpagerindicator.l:
    com.viewpagerindicator.TitlePageIndicator$IndicatorStyle None -> a
    com.viewpagerindicator.TitlePageIndicator$IndicatorStyle Triangle -> b
    com.viewpagerindicator.TitlePageIndicator$IndicatorStyle Underline -> c
    int value -> d
    com.viewpagerindicator.TitlePageIndicator$IndicatorStyle[] ENUM$VALUES -> e
    com.viewpagerindicator.TitlePageIndicator$IndicatorStyle[] values() -> values
    com.viewpagerindicator.TitlePageIndicator$IndicatorStyle valueOf(java.lang.String) -> valueOf
com.viewpagerindicator.TitlePageIndicator$LinePosition -> com.viewpagerindicator.m:
    com.viewpagerindicator.TitlePageIndicator$LinePosition Bottom -> a
    com.viewpagerindicator.TitlePageIndicator$LinePosition Top -> b
    int value -> c
    com.viewpagerindicator.TitlePageIndicator$LinePosition[] ENUM$VALUES -> d
    com.viewpagerindicator.TitlePageIndicator$LinePosition[] values() -> values
    com.viewpagerindicator.TitlePageIndicator$LinePosition valueOf(java.lang.String) -> valueOf
com.viewpagerindicator.TitlePageIndicator$OnCenterItemClickListener -> com.viewpagerindicator.n:
    void onCenterItemClick(int) -> a
com.viewpagerindicator.TitlePageIndicator$SavedState -> com.viewpagerindicator.TitlePageIndicator$SavedState:
    int currentPage -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.viewpagerindicator.TitlePageIndicator$SavedState$1 -> com.viewpagerindicator.o:
    com.viewpagerindicator.TitlePageIndicator$SavedState createFromParcel(android.os.Parcel) -> a
    com.viewpagerindicator.TitlePageIndicator$SavedState[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.viewpagerindicator.UnderlinePageIndicator -> com.viewpagerindicator.UnderlinePageIndicator:
    android.graphics.Paint mPaint -> a
    boolean mFades -> b
    int mFadeDelay -> c
    int mFadeLength -> d
    int mFadeBy -> e
    android.support.v4.view.ViewPager mViewPager -> f
    android.support.v4.view.ViewPager$OnPageChangeListener mListener -> g
    int mScrollState -> h
    int mCurrentPage -> i
    float mPositionOffset -> j
    int mTouchSlop -> k
    float mLastMotionX -> l
    int mActivePointerId -> m
    boolean mIsDragging -> n
    java.lang.Runnable mFadeRunnable -> o
    boolean getFades() -> getFades
    void setFades(boolean) -> setFades
    int getFadeDelay() -> getFadeDelay
    void setFadeDelay(int) -> setFadeDelay
    int getFadeLength() -> getFadeLength
    void setFadeLength(int) -> setFadeLength
    int getSelectedColor() -> getSelectedColor
    void setSelectedColor(int) -> setSelectedColor
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setViewPager(android.support.v4.view.ViewPager) -> setViewPager
    void setCurrentItem(int) -> setCurrentItem
    void onPageScrollStateChanged(int) -> b
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    boolean access$0(com.viewpagerindicator.UnderlinePageIndicator) -> a
    java.lang.Runnable access$3(com.viewpagerindicator.UnderlinePageIndicator) -> b
com.viewpagerindicator.UnderlinePageIndicator$2 -> com.viewpagerindicator.p:
    com.viewpagerindicator.UnderlinePageIndicator this$0 -> a
    void run() -> run
com.viewpagerindicator.UnderlinePageIndicator$SavedState -> com.viewpagerindicator.UnderlinePageIndicator$SavedState:
    int currentPage -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.viewpagerindicator.UnderlinePageIndicator$SavedState$1 -> com.viewpagerindicator.q:
    com.viewpagerindicator.UnderlinePageIndicator$SavedState createFromParcel(android.os.Parcel) -> a
    com.viewpagerindicator.UnderlinePageIndicator$SavedState[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
org.noip.nordberg.shoplister.activities.MainActivity -> org.noip.nordberg.shoplister.activities.MainActivity:
    android.support.v4.view.PagerAdapter pagerAdapter -> m
    android.app.ActionBar actionBar -> n
    android.support.v4.view.ViewPager pager -> o
    void onResume() -> onResume
    void onPause() -> onPause
    void onCreate(android.os.Bundle) -> onCreate
    void setupActionBar() -> f
    void setupSpinner() -> g
    void initialiseViewPaging() -> h
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    boolean onNavigationItemSelected(int,long) -> onNavigationItemSelected
    android.app.ActionBar access$0(org.noip.nordberg.shoplister.activities.MainActivity) -> a
org.noip.nordberg.shoplister.activities.MainActivity$1 -> org.noip.nordberg.shoplister.activities.a:
    org.noip.nordberg.shoplister.activities.MainActivity this$0 -> a
    void onPostExecute(java.lang.Void) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
org.noip.nordberg.shoplister.activities.SettingsActivity -> org.noip.nordberg.shoplister.activities.SettingsActivity:
    void onCreate(android.os.Bundle) -> onCreate
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onBackPressed() -> onBackPressed
org.noip.nordberg.shoplister.adapters.BasicAbstractListAdapter -> org.noip.nordberg.shoplister.a.a:
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    boolean hasStableIds() -> hasStableIds
    boolean isEmpty() -> isEmpty
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    boolean isEnabled(int) -> isEnabled
org.noip.nordberg.shoplister.adapters.CurrentListAdapter -> org.noip.nordberg.shoplister.a.b:
    android.database.Cursor cursor -> a
    android.view.LayoutInflater layoutInflater -> b
    int getCount() -> getCount
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void swapCursor(android.database.Cursor) -> a
    void initCleanList() -> a
    android.database.Cursor getCursor() -> b
org.noip.nordberg.shoplister.adapters.FavListAdapter -> org.noip.nordberg.shoplister.a.c:
    android.database.Cursor cursor -> a
    android.view.View view -> b
    android.widget.ImageView favOffButton -> c
    android.widget.TextView item -> d
    android.view.LayoutInflater layoutInflater -> e
    java.lang.String[] sections -> f
    java.util.Map alphaIndex -> g
    android.util.SparseIntArray sectionAsIntegerForEveryPosition -> h
    int getCount() -> getCount
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void getViewsFromLayout() -> a
    void setupViews(int) -> a
    void setupOnClickListeners() -> c
    void swapCursor(android.database.Cursor) -> a
    void setupRowBackgroundColor() -> d
    void setupSectionIndexer() -> e
    boolean isEmpty() -> isEmpty
    int getPositionForSection(int) -> getPositionForSection
    int getSectionForPosition(int) -> getSectionForPosition
    java.lang.Object[] getSections() -> getSections
    android.database.Cursor getCursor() -> b
org.noip.nordberg.shoplister.adapters.FragPagerAdapter -> org.noip.nordberg.shoplister.a.d:
    java.util.List fragments -> a
    java.lang.String[] TITLES -> b
    int getCount() -> b
    java.lang.CharSequence getPageTitle(int) -> c
    android.support.v4.app.Fragment getItem(int) -> a
org.noip.nordberg.shoplister.adapters.NavSpinnerAdapter -> org.noip.nordberg.shoplister.a.e:
    int resource -> a
    int textViewResourceId -> b
    java.util.List items -> c
    android.widget.TextView item -> d
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
org.noip.nordberg.shoplister.asynctasks.CleanupListAsyncTask -> org.noip.nordberg.shoplister.b.a:
    android.database.Cursor cursor -> a
    android.content.ContentResolver contentResolver -> b
    android.content.ContentValues[] contentValuesArray -> c
    java.lang.Void doInBackground(java.lang.Integer[]) -> a
    void onPostExecute(java.lang.Void) -> a
    void bulkCleanDb(java.util.List) -> a
    android.database.Cursor getCursor() -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
org.noip.nordberg.shoplister.asynctasks.NavSpinnerBuilderAsyncTask -> org.noip.nordberg.shoplister.b.b:
    android.database.Cursor cursor -> a
    java.lang.Void doInBackground(java.lang.Object[]) -> a
    java.util.ArrayList buildSpinnerArray() -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
org.noip.nordberg.shoplister.asynctasks.QueryHelperBaseAsyncTask -> org.noip.nordberg.shoplister.b.c:
    android.content.ContentValues newValues -> a
    android.content.ContentResolver contentResolver -> b
    android.net.Uri uri -> c
    java.lang.Boolean newItemWasJustAdded -> d
org.noip.nordberg.shoplister.asynctasks.ShareListAsyncTask -> org.noip.nordberg.shoplister.b.d:
    android.database.Cursor cursor -> a
    java.lang.String shareString -> b
    java.lang.Void doInBackground(java.lang.Object[]) -> a
    void onPostExecute(java.lang.Void) -> a
    java.lang.String getShareString(java.lang.String) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
org.noip.nordberg.shoplister.asynctasks.queries.AddNewItemAsyncTask -> org.noip.nordberg.shoplister.b.a.a:
    java.lang.String item -> e
    java.lang.String list -> f
    int quantity -> g
    java.lang.Void doInBackground(java.lang.Object[]) -> a
    void onPostExecute(java.lang.Void) -> a
    int detectConflict(java.lang.String,java.lang.String) -> a
    void setSortRank(int,int) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
org.noip.nordberg.shoplister.asynctasks.queries.IncQuantityByOneAsyncTask -> org.noip.nordberg.shoplister.b.a.b:
    int rowId -> e
    java.lang.Void doInBackground(java.lang.Object[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
org.noip.nordberg.shoplister.asynctasks.queries.SetCheckedInDbAsyncTask -> org.noip.nordberg.shoplister.b.a.c:
    java.lang.Boolean checked -> e
    java.lang.Void doInBackground(java.lang.Object[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
org.noip.nordberg.shoplister.asynctasks.queries.SetExtrasAsyncTask -> org.noip.nordberg.shoplister.b.a.d:
    java.lang.String extras -> e
    java.lang.Void doInBackground(java.lang.Object[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
org.noip.nordberg.shoplister.asynctasks.queries.SetFavAsyncTask -> org.noip.nordberg.shoplister.b.a.e:
    java.lang.Boolean isFav -> e
    java.lang.Void doInBackground(java.lang.Object[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
org.noip.nordberg.shoplister.asynctasks.queries.SetItemAsyncTask -> org.noip.nordberg.shoplister.b.a.f:
    java.lang.String item -> e
    java.lang.Void doInBackground(java.lang.Object[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
org.noip.nordberg.shoplister.asynctasks.queries.SetQuantityAsyncTask -> org.noip.nordberg.shoplister.b.a.g:
    int quantity -> e
    java.lang.Void doInBackground(java.lang.Object[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
org.noip.nordberg.shoplister.asynctasks.queries.SetSortRankAsyncTask -> org.noip.nordberg.shoplister.b.a.h:
    int sortRank -> e
    java.lang.Void doInBackground(java.lang.Object[]) -> a
    void onPostExecute(java.lang.Void) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
org.noip.nordberg.shoplister.cleanup.CleanupUtils -> org.noip.nordberg.shoplister.c.a:
    void cleanup(org.noip.nordberg.shoplister.database.CursorProvider) -> a
org.noip.nordberg.shoplister.controllers.ItemsController -> org.noip.nordberg.shoplister.d.a:
    void deleteListPrompt(android.app.Activity) -> a
    void renameListPrompt(java.lang.String,android.app.Activity) -> a
    void createNewListPrompt(boolean,android.app.Activity) -> a
    void addBlankItem(java.lang.String,android.app.Activity) -> b
org.noip.nordberg.shoplister.controllers.ItemsController$1 -> org.noip.nordberg.shoplister.d.b:
    android.app.Activity val$activity -> a
    void onClick(android.content.DialogInterface,int) -> onClick
org.noip.nordberg.shoplister.controllers.ItemsController$2 -> org.noip.nordberg.shoplister.d.c:
    void onClick(android.content.DialogInterface,int) -> onClick
org.noip.nordberg.shoplister.controllers.ItemsController$3 -> org.noip.nordberg.shoplister.d.d:
    android.widget.EditText val$input -> a
    java.lang.String val$listOld -> b
    android.app.Activity val$activity -> c
    void onClick(android.content.DialogInterface,int) -> onClick
org.noip.nordberg.shoplister.controllers.ItemsController$4 -> org.noip.nordberg.shoplister.d.e:
    android.widget.EditText val$input -> a
    void onClick(android.content.DialogInterface,int) -> onClick
org.noip.nordberg.shoplister.controllers.ItemsController$5 -> org.noip.nordberg.shoplister.d.f:
    android.widget.EditText val$input -> a
    android.app.Activity val$activity -> b
    void onClick(android.content.DialogInterface,int) -> onClick
org.noip.nordberg.shoplister.controllers.ItemsController$6 -> org.noip.nordberg.shoplister.d.g:
    android.widget.EditText val$input -> a
    void onClick(android.content.DialogInterface,int) -> onClick
org.noip.nordberg.shoplister.controllers.ItemsController$7 -> org.noip.nordberg.shoplister.d.h:
    android.app.Activity val$activity -> e
    void onPostExecute(java.lang.Void) -> a
org.noip.nordberg.shoplister.customviews.EditTextMultiLine -> org.noip.nordberg.shoplister.customviews.EditTextMultiLine:
    android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
org.noip.nordberg.shoplister.customviews.ListRowView -> org.noip.nordberg.shoplister.customviews.ListRowView:
    android.widget.Button incQuantityButton -> a
    android.widget.ToggleButton favToggleStar -> b
    android.widget.CheckBox checkBox -> c
    android.widget.Button extrasFiller -> d
    android.widget.TextView leftMarginFiller -> e
    org.noip.nordberg.shoplister.database.CursorProvider cursorProvider -> f
    int position -> g
    android.widget.ImageView dragHandle -> h
    android.widget.EditText extrasEditText -> i
    org.noip.nordberg.shoplister.customviews.EditTextMultiLine itemEditText -> j
    void setup(org.noip.nordberg.shoplister.database.CursorProvider,int) -> a
    void setupViews() -> a
    void lockEditingOnCheckedItems() -> b
    void hideExtrasIfEmpty() -> c
    void applyPrefsToViews() -> d
    void setFonts() -> e
    void setupViewsFromLayout() -> f
    void setupFavToggle() -> g
    void setViewTags() -> h
    void setupStrikeThrough() -> i
    void setupListeners() -> j
    void setupExtrasExposed() -> k
org.noip.nordberg.shoplister.database.ContProvider -> org.noip.nordberg.shoplister.database.ContProvider:
    org.noip.nordberg.shoplister.database.DBHelper database -> b
    android.net.Uri CONTENT_URI -> a
    android.content.UriMatcher myUriMatcher -> c
    boolean onCreate() -> onCreate
    android.os.Bundle call(java.lang.String,java.lang.String,android.os.Bundle) -> call
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    java.lang.String getType(android.net.Uri) -> getType
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    void bulkUpdate(java.util.ArrayList,android.content.ContentValues[]) -> a
    void bulkUpdateAndIncTotal(java.util.ArrayList,android.content.ContentValues[]) -> b
org.noip.nordberg.shoplister.database.CursorProvider -> org.noip.nordberg.shoplister.database.a:
    android.database.Cursor getCursor() -> b
org.noip.nordberg.shoplister.database.DBHelper -> org.noip.nordberg.shoplister.database.b:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
org.noip.nordberg.shoplister.dragndrop.DragNDropUtils -> org.noip.nordberg.shoplister.e.a:
    void actionDrop(int,int,org.noip.nordberg.shoplister.database.CursorProvider) -> a
    int getRowIdFromSortRank(int,android.database.Cursor) -> a
    void cleanListMapping() -> a
org.noip.nordberg.shoplister.fragments.CurrentListFragment -> org.noip.nordberg.shoplister.f.a:
    org.noip.nordberg.shoplister.adapters.CurrentListAdapter adapter -> N
    android.widget.EditText addItemEditTextFooter -> O
    android.widget.TextView footerFiller -> P
    org.noip.nordberg.shoplister.fragments.CurrentListFragment currentListFragmentRef -> Q
    com.mobeta.android.dslv.DragSortListView$DropListener onDrop -> R
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void addFooter() -> u
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
org.noip.nordberg.shoplister.fragments.CurrentListFragment$1 -> org.noip.nordberg.shoplister.f.b:
    org.noip.nordberg.shoplister.fragments.CurrentListFragment this$0 -> a
    void drop(int,int) -> a_
org.noip.nordberg.shoplister.fragments.CurrentListFragment$2 -> org.noip.nordberg.shoplister.f.c:
    org.noip.nordberg.shoplister.fragments.CurrentListFragment this$0 -> a
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
org.noip.nordberg.shoplister.fragments.FavListFragment -> org.noip.nordberg.shoplister.f.d:
    android.widget.ListView favListView -> N
    org.noip.nordberg.shoplister.adapters.FavListAdapter adapter -> O
    org.noip.nordberg.shoplister.fragments.FavListFragment favListFragmentRef -> P
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
org.noip.nordberg.shoplister.fragments.SettingsFragment -> org.noip.nordberg.shoplister.f.e:
    void onCreate(android.os.Bundle) -> onCreate
    void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
    void onResume() -> onResume
    void onPause() -> onPause
org.noip.nordberg.shoplister.listeners.CheckBoxOnClick -> org.noip.nordberg.shoplister.g.a:
    org.noip.nordberg.shoplister.database.CursorProvider cursorProvider -> a
    void onClick(android.view.View) -> onClick
org.noip.nordberg.shoplister.listeners.CurrentListViewOnScroll -> org.noip.nordberg.shoplister.g.b:
    org.noip.nordberg.shoplister.database.CursorProvider cursorProvider -> a
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
org.noip.nordberg.shoplister.listeners.ExtrasEditTextOnEditorAction -> org.noip.nordberg.shoplister.g.c:
    org.noip.nordberg.shoplister.database.CursorProvider cursorProvider -> a
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
org.noip.nordberg.shoplister.listeners.ExtrasEditTextOnTouch -> org.noip.nordberg.shoplister.g.d:
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
org.noip.nordberg.shoplister.listeners.ExtrasFillerOnTouch -> org.noip.nordberg.shoplister.g.e:
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
org.noip.nordberg.shoplister.listeners.FavCheckBoxOnCheckedChanged -> org.noip.nordberg.shoplister.g.f:
    org.noip.nordberg.shoplister.database.CursorProvider cursorProvider -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
org.noip.nordberg.shoplister.listeners.FavOffButtonOnClick -> org.noip.nordberg.shoplister.g.g:
    org.noip.nordberg.shoplister.database.CursorProvider cursorProvider -> a
    void onClick(android.view.View) -> onClick
org.noip.nordberg.shoplister.listeners.FavRowItemTextOnClick -> org.noip.nordberg.shoplister.g.h:
    org.noip.nordberg.shoplister.database.CursorProvider cursorProvider -> a
    void onClick(android.view.View) -> onClick
org.noip.nordberg.shoplister.listeners.IncQuantityButtonOnClick -> org.noip.nordberg.shoplister.g.i:
    org.noip.nordberg.shoplister.database.CursorProvider cursorProvider -> a
    void onClick(android.view.View) -> onClick
org.noip.nordberg.shoplister.listeners.IncQuantityButtonOnLongClick -> org.noip.nordberg.shoplister.g.j:
    org.noip.nordberg.shoplister.database.CursorProvider cursorProvider -> a
    boolean onLongClick(android.view.View) -> onLongClick
org.noip.nordberg.shoplister.listeners.ItemEditTextOnEditorAction -> org.noip.nordberg.shoplister.g.k:
    org.noip.nordberg.shoplister.database.CursorProvider cursorProvider -> a
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
org.noip.nordberg.shoplister.listeners.ItemEditTextOnTouch -> org.noip.nordberg.shoplister.g.l:
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
org.noip.nordberg.shoplister.listeners.SlideOutRightAnimListener -> org.noip.nordberg.shoplister.g.m:
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
org.noip.nordberg.shoplister.utilities.Animations -> org.noip.nordberg.shoplister.utilities.a:
    android.view.animation.ScaleAnimation SCALE_ANIM -> a
    android.view.animation.Animation SLIDE_OUT_RIGHT_ANIM -> b
org.noip.nordberg.shoplister.utilities.AppRef -> org.noip.nordberg.shoplister.utilities.AppRef:
    android.app.Activity activity -> a
    android.content.Context context -> b
    void onCreate() -> onCreate
org.noip.nordberg.shoplister.utilities.InitUtils -> org.noip.nordberg.shoplister.utilities.b:
    void setupPreferences(android.app.Activity) -> a
    void setupTypeFaces() -> a
org.noip.nordberg.shoplister.utilities.MiscUtils -> org.noip.nordberg.shoplister.utilities.c:
    int dpToPx(int) -> a
    void showKeyboard(android.view.View,android.content.Context) -> a
    void hideKeyboard(android.view.View) -> a
    void showKeyboardInAlertDialog(android.app.AlertDialog) -> a
    void restartLoaderManager(android.support.v4.app.Fragment) -> a
org.noip.nordberg.shoplister.utilities.Statics -> org.noip.nordberg.shoplister.utilities.d:
    java.lang.String currentListName -> a
    android.graphics.Typeface robotoSerifTypeFace -> b
    android.graphics.Typeface robotoSerifBoldTypeFace -> c
    java.lang.Boolean prefShowQuantity -> d
    java.lang.String prefDragHandleSide -> e
    android.content.SharedPreferences$Editor prefEditor -> f
    java.lang.Boolean sortByTotal -> g
    java.util.ArrayList dropdownValues -> h
    boolean extrasExposed -> i
    int extrasExposedRow -> j
    com.mobeta.android.dslv.DragSortListView currentListView -> k
    boolean cleaningRequested -> l
    java.util.List rowsToHideAfterAnim -> m
    java.util.List preDropSortRanksFull -> n
    android.util.SparseIntArray dragNDropMap -> o
    java.util.Set checkedRows -> p
